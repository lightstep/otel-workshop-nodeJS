import { otlpTypes } from '@opentelemetry/exporter-trace-otlp-http';
import { MetricRecord, MetricExporter } from '@opentelemetry/sdk-metrics-base';
import { OTLPExporterConfigNode, OTLPExporterNodeBase, ServiceClientType } from '@opentelemetry/exporter-trace-otlp-grpc';
/**
 * OTLP Metric Exporter for Node
 */
export declare class OTLPMetricExporter extends OTLPExporterNodeBase<MetricRecord, otlpTypes.opentelemetryProto.collector.metrics.v1.ExportMetricsServiceRequest> implements MetricExporter {
    protected readonly _startTime: number;
    constructor(config?: OTLPExporterConfigNode);
    convert(metrics: MetricRecord[]): otlpTypes.opentelemetryProto.collector.metrics.v1.ExportMetricsServiceRequest;
    getDefaultUrl(config: OTLPExporterConfigNode): string;
    getServiceClientType(): ServiceClientType;
    getServiceProtoPath(): string;
}
//# sourceMappingURL=OTLPMetricExporter.d.ts.map